///////////////////////////////////////////////////////////////////////////////
// Specifications

secure_clean_1408_ov <- admit "secure_clean" [] (secure_clean_spec 1408);
    let secure_clean_spec np = do {
    (p,pp) <- ptr_to_fresh "p" (llvm_array np i8);
    crucible_execute_func [pp, tm {{ `np:[32] }}];
    crucible_points_to pp (tm {{ zero:[np][8] }});
};

let parallel_hash_spec  = do {
    (oh, ohp) <- ptr_to_fresh "oh" (llvm_array 4 sha384_hash_s);
    (m, mp) <- ptr_to_fresh "m" (llvm_array 8188 i8);
    // crucible_precond {{ m == 0}};
    // la <- crucible_fresh_var "la" i32;
    crucible_execute_func [ ohp, mp, tm {{ `8188:[32] }}];
    res <- crucible_fresh_var "res" (llvm_array 4 sha384_hash_s);
    crucible_points_to ohp (tm {{ res }});
};

let parallel_hash_spec_getss  = do {
    ap <- out_ref sha384_hash_T;
    (b, bp) <- ptr_to_fresh "m" (llvm_array N_SIZE_GLOB i8);
    c <- crucible_fresh_var "la" i32;
    crucible_execute_func [ap, bp, tm c];
};

///////////////////////////////////////////////////////////////////////////////
// Proof commands

parallel_hash_ov <- verify "parallel_hash"
    [ sha_ov
    , sha384_1408_ov
    , sha384_1007_ov
    , sha_mb_ov
    , secure_clean_1408_ov ]
    parallel_hash_spec;

parallel_hash_ov_getss <- admit "parallel_hash"
    [compute_slice_len_ov] parallel_hash_spec_getss;
